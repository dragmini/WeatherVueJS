{"remainingRequest":"/Users/andrejbelaev/Desktop/vue js/WeatherVueJS/node_modules/babel-loader/lib/index.js!/Users/andrejbelaev/Desktop/vue js/WeatherVueJS/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/andrejbelaev/Desktop/vue js/WeatherVueJS/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrejbelaev/Desktop/vue js/WeatherVueJS/src/components/CardsCity.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrejbelaev/Desktop/vue js/WeatherVueJS/src/components/CardsCity.vue","mtime":1643062749909},{"path":"/Users/andrejbelaev/Desktop/vue js/WeatherVueJS/babel.config.js","mtime":1642968465698},{"path":"/Users/andrejbelaev/Desktop/vue js/WeatherVueJS/node_modules/cache-loader/dist/cjs.js","mtime":1642968463257},{"path":"/Users/andrejbelaev/Desktop/vue js/WeatherVueJS/node_modules/babel-loader/lib/index.js","mtime":1642968463510},{"path":"/Users/andrejbelaev/Desktop/vue js/WeatherVueJS/node_modules/cache-loader/dist/cjs.js","mtime":1642968463257},{"path":"/Users/andrejbelaev/Desktop/vue js/WeatherVueJS/node_modules/vue-loader/lib/index.js","mtime":1642968463569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBDYXJkQ2l0eSBmcm9tICcuL0NhcmRDaXR5LnZ1ZSc7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsgLy8gVnVlLmZvcmNlVXBkYXRlKCk7Ci8vIGltcG9ydCBIZWFkZXJNZW51IGZyb20gJy4vSGVhZGVyTWVudS52dWUnCgp2YXIgVE9LRU4gPSAnY2FjOGY1YjY3YTAwZDRiNGNiMWM1ZjE4ZDJjMjNiMjInOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsnc2VhcmNoVGV4dCddLAogIHdhdGNoOiB7CiAgICBzZWFyY2hUZXh0OiBmdW5jdGlvbiBzZWFyY2hUZXh0KG5ld1ZhbCkgewogICAgICBpZiAodGhpcy5uZXdWYWwgIT09ICcnKSB7CiAgICAgICAgdGhpcy5nZXREYXRhV2VhdGhlcihuZXdWYWwpOwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2FyZHM6IFtdLAogICAgICBjYXJkc0xlbmdodDogMCwKICAgICAgc3RhcnRDYXJkOiBbewogICAgICAgIGNpdHlOYW1lOiAnTW9zY293JwogICAgICB9LCB7CiAgICAgICAgY2l0eU5hbWU6ICdMb25kb24nCiAgICAgIH0sIHsKICAgICAgICBjaXR5TmFtZTogJ05ldyBZb3JrJwogICAgICB9LCB7CiAgICAgICAgY2l0eU5hbWU6ICdEdWJhaScKICAgICAgfV0KICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBDYXJkQ2l0eTogQ2FyZENpdHkKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmxvYWRTdGFydENpdHkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWRTdGFydENpdHk6IGZ1bmN0aW9uIGxvYWRTdGFydENpdHkoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnN0YXJ0Q2FyZC5tYXAoZnVuY3Rpb24gKGNhcmQpIHsKICAgICAgICBfdGhpcy5nZXREYXRhV2VhdGhlcihjYXJkLmNpdHlOYW1lKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0RGF0YVdlYXRoZXI6IGZ1bmN0aW9uIGdldERhdGFXZWF0aGVyKGNpdHlOYW1lKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgZmV0Y2goImh0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3E9Ii5jb25jYXQoY2l0eU5hbWUsICImYXBwaWQ9IikuY29uY2F0KFRPS0VOKSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgX3RoaXMyLnNhdmVEYXRhV2VhdGhlcihkYXRhKTsKICAgICAgfSk7CiAgICB9LAogICAgc2F2ZURhdGFXZWF0aGVyOiBmdW5jdGlvbiBzYXZlRGF0YVdlYXRoZXIoZGF0YSkgewogICAgICB0aGlzLmNhcmRzLnNwbGljZSh0aGlzLmNhcmRzLmxlbmd0aCAvIDIsIDAsIGRhdGEpOyAvLyB0aGlzLmNhcmRzTGVuZ2h0ID0gdGhpcy5jYXJkcy5sZW5ndGgKCiAgICAgIHRoaXMuY2FyZHNMZW5naHQrKzsgLy8gVnVlLmZvcmNlVXBkYXRlKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["CardsCity.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAA,QAAA,MAAA,gBAAA;AACA,OAAA,GAAA,MAAA,KAAA,C,CAEA;AACA;;AAEA,IAAA,KAAA,GAAA,kCAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,YAAA,CADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,UADA,sBACA,MADA,EACA;AACA,UAAA,KAAA,MAAA,KAAA,EAAA,EAAA;AACA,aAAA,cAAA,CAAA,MAAA;AACA;AACA;AALA,GAFA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,CAFA;AAGA,MAAA,SAAA,EAAA,CACA;AACA,QAAA,QAAA,EAAA;AADA,OADA,EAIA;AACA,QAAA,QAAA,EAAA;AADA,OAJA,EAOA;AACA,QAAA,QAAA,EAAA;AADA,OAPA,EAUA;AACA,QAAA,QAAA,EAAA;AADA,OAVA;AAHA,KAAA;AAkBA,GA5BA;AA6BA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GA7BA;AAgCA,EAAA,OAhCA,qBAgCA;AACA,SAAA,aAAA;AACA,GAlCA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,WAAA,SAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,cAAA,CAAA,IAAA,CAAA,QAAA;AACA,OAFA;AAGA,KALA;AAMA,IAAA,cANA,0BAMA,QANA,EAMA;AAAA;;AACA,MAAA,KAAA,6DAAA,QAAA,oBAAA,KAAA,EAAA,CACA,IADA,CACA,UAAA,QAAA;AAAA,eAAA,QAAA,CAAA,IAAA,EAAA;AAAA,OADA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,eAAA,CAAA,IAAA;AAEA,OALA;AAMA,KAbA;AAcA,IAAA,eAdA,2BAcA,IAdA,EAcA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EADA,CAEA;;AACA,WAAA,WAAA,GAHA,CAIA;AACA;AAnBA;AAnCA,CAAA","sourcesContent":["<template>\n    <div class=\"cards\">\n        <CardCity v-for=\"(card, index) in this.cards\" :key=\"index\" :card=\"card\" :index=\"index\" :cardsLenght=\"cardsLenght\"></CardCity>\n        <!-- <button @click=\"this.getDataWeather\"></button> -->\n        <!-- <div>\n            {{ this.searchText }}\n        </div> -->\n    </div>\n</template>\n\n<style>\n.cards {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    height: 50%;\n    align-items: flex-end;\n    /* margin-top: 7%; */\n}\n</style>\n\n<script>\nimport CardCity from './CardCity.vue'\nimport Vue from 'vue'\n\n// Vue.forceUpdate();\n// import HeaderMenu from './HeaderMenu.vue'\n\nconst TOKEN = 'cac8f5b67a00d4b4cb1c5f18d2c23b22'\n\nexport default {\n    props: ['searchText'],\n    watch: {\n        searchText(newVal) {\n            if(this.newVal !== '') {\n            this.getDataWeather(newVal)\n            }\n        }\n    },\n    data() {\n        return {\n            cards: [],\n            cardsLenght: 0,\n            startCard: [\n                {\n                    cityName: 'Moscow',\n                },\n                {\n                    cityName: 'London',\n                },\n                {\n                    cityName: 'New York',\n                },\n                {\n                    cityName: 'Dubai',\n                },\n            ]\n        }\n    },\n    components: {\n        CardCity\n    },\n    mounted() {\n        this.loadStartCity()\n    },\n    methods: {\n        loadStartCity() {\n            this.startCard.map((card) => {\n                    this.getDataWeather(card.cityName)\n                })\n        },\n        getDataWeather(cityName) {\n            fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${TOKEN}`)\n                .then(response => response.json())\n                .then(data => {\n                        this.saveDataWeather(data)\n                        \n                    });\n        },\n        saveDataWeather(data) {\n            this.cards.splice(this.cards.length/2, 0, data)\n            // this.cardsLenght = this.cards.length\n            this.cardsLenght++\n            // Vue.forceUpdate();\n        },\n    }\n}\n\n</script>\n"],"sourceRoot":"src/components"}]}